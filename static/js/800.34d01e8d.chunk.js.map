{"version":3,"file":"static/js/800.34d01e8d.chunk.js","mappings":"4JAEaA,EAAQ,SAAHC,GAAA,IAAMC,EAAID,EAAJC,KAAI,OAAOC,EAAAA,EAAAA,KAAA,MAAAC,SAAKF,GAAW,C,oGCC7CG,GAAc,IAAIC,MAAOC,cAEzBC,EAAYC,EAAAA,KAAaC,MAAM,CACnCC,KAAMF,EAAAA,KACHG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,oBACZC,OAAQN,EAAAA,KACLG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,sBACZE,KAAMP,EAAAA,KACHQ,QAAQ,2BACRL,IAAI,KAAM,oCACVC,IAAIR,EAAY,6BAADa,OAA+Bb,IAC9CS,SAAS,oBACZK,OAAQV,EAAAA,KACLG,IAAI,EAAG,4BACPQ,SAAS,EAAG,gCACZC,SAAS,EAAG,2BACZP,SAAS,wBAGDQ,EAAU,WACrB,OACEnB,EAAAA,EAAAA,KAACoB,EAAAA,GAAM,CACLC,cAAe,CACbb,KAAM,GACNI,OAAQ,GACRC,KAAM,GACNG,OAAQ,GAEVM,iBAAkBjB,EAClBkB,SAAU,SAAAC,GAERC,QAAQC,IAAIF,EACd,EAAEvB,SAED,SAAAH,GAAA,IAAG6B,EAAM7B,EAAN6B,OAAe7B,EAAP8B,QAAO,OACjBC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAAA7B,SAAA,EACH4B,EAAAA,EAAAA,MAAA,SAAA5B,SAAA,CAAO,gBAELD,EAAAA,EAAAA,KAAC+B,EAAAA,GAAK,CACJC,KAAK,OACLxB,KAAK,OACLyB,YAAY,6BAMhBJ,EAAAA,EAAAA,MAAA,SAAA5B,SAAA,CAAO,eAELD,EAAAA,EAAAA,KAAC+B,EAAAA,GAAK,CACJC,KAAK,OACLxB,KAAK,SACLyB,YAAY,gCAMhBJ,EAAAA,EAAAA,MAAA,SAAA5B,SAAA,CAAO,uBAELD,EAAAA,EAAAA,KAAC+B,EAAAA,GAAK,CACJC,KAAK,OACLxB,KAAK,OACLyB,YAAY,2BAMhBJ,EAAAA,EAAAA,MAAA,SAAA5B,SAAA,CAAO,UAELD,EAAAA,EAAAA,KAAC+B,EAAAA,GAAK,CACJC,KAAK,SACLxB,KAAK,SACLyB,YAAY,2BAMhBjC,EAAAA,EAAAA,KAAA,OAAAC,SAAM0B,EAAOnB,QACbR,EAAAA,EAAAA,KAAA,OAAAC,SAAM0B,EAAOf,UACbZ,EAAAA,EAAAA,KAAA,OAAAC,SAAM0B,EAAOd,QACbb,EAAAA,EAAAA,KAAA,OAAAC,SAAM0B,EAAOX,UACbhB,EAAAA,EAAAA,KAAA,UAAQgC,KAAK,SAAQ/B,SAAC,aACjB,GAIf,E,oBClFA,EAVgB,WACd,OACE4B,EAAAA,EAAAA,MAAAK,EAAAA,SAAA,CAAAjC,SAAA,EACED,EAAAA,EAAAA,KAACH,EAAAA,EAAK,CAACE,KAAM,qBACbC,EAAAA,EAAAA,KAACmC,EAAAA,GAAI,CAACC,GAAI,IAAInC,SAAC,aACfD,EAAAA,EAAAA,KAACmB,EAAO,MAGd,C","sources":["components/Title/Title.jsx","components/AddForm/AddForm.jsx","pages/AddPage.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport const Title = ({ text }) => <h1>{text}</h1>;\n\nTitle.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\n\nconst currentYear = new Date().getFullYear();\n\nconst AddSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(20, 'Too Long!')\n    .required('Name is required'),\n  author: Yup.string()\n    .min(2, 'Too Short!')\n    .max(20, 'Too Long!')\n    .required('Author is required'),\n  year: Yup.number()\n    .integer('Year must be an integer')\n    .min(1900, 'Year cannot be earlier than 1900')\n    .max(currentYear, `Year cannot be later than ${currentYear}`)\n    .required('Year is required'),\n  rating: Yup.number()\n    .min(1, 'Rating should be written')\n    .moreThan(1, 'Rating should be more than 1')\n    .lessThan(5, 'Rating can be maximum 5')\n    .required('Rating is required'),\n});\n\nexport const AddForm = () => {\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        author: '',\n        year: '',\n        rating: 0,\n      }}\n      validationSchema={AddSchema}\n      onSubmit={values => {\n        // same shape as initial values\n        console.log(values);\n      }}\n    >\n      {({ errors, touched }) => (\n        <Form>\n          <label>\n            Product name\n            <Field\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"For example `Iphone`\"\n              //   onChange={handleChange}\n              //   onBlur={handleBlur}\n              //   value={values.email}\n            />\n          </label>\n          <label>\n            Author name\n            <Field\n              type=\"text\"\n              name=\"author\"\n              placeholder=\"For example `Elon Musk`\"\n              //   onChange={handleChange}\n              //   onBlur={handleBlur}\n              //   value={values.email}\n            />\n          </label>\n          <label>\n            Year of publication\n            <Field\n              type=\"text\"\n              name=\"year\"\n              placeholder=\"For example `1992`\"\n              //   onChange={handleChange}\n              //   onBlur={handleBlur}\n              //   value={values.email}\n            />\n          </label>\n          <label>\n            Rating\n            <Field\n              type=\"number\"\n              name=\"rating\"\n              placeholder=\"For example `1.24`\"\n              //   onChange={handleChange}\n              //   onBlur={handleBlur}\n              //   value={values.email}\n            />\n          </label>\n          <div>{errors.name}</div>\n          <div>{errors.author}</div>\n          <div>{errors.year}</div>\n          <div>{errors.rating}</div>\n          <button type=\"submit\">Submit</button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import { AddForm } from 'components/AddForm/AddForm';\nimport { Link } from 'react-router-dom';\nimport { Title } from '../components/Title/Title';\n\nconst AddPage = () => {\n  return (\n    <>\n      <Title text={'Add new product'} />\n      <Link to={'/'}>Go back</Link>\n      <AddForm />\n    </>\n  );\n};\n\nexport default AddPage;\n"],"names":["Title","_ref","text","_jsx","children","currentYear","Date","getFullYear","AddSchema","Yup","shape","name","min","max","required","author","year","integer","concat","rating","moreThan","lessThan","AddForm","Formik","initialValues","validationSchema","onSubmit","values","console","log","errors","touched","_jsxs","Form","Field","type","placeholder","_Fragment","Link","to"],"sourceRoot":""}