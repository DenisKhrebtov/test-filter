{"version":3,"file":"static/js/978.64810a73.chunk.js","mappings":"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","sources":["components/ItemList/ItemList.styled.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","components/AddForm/AddForm.styled.jsx","components/AddForm/AddForm.jsx","components/UpdateModal/UpdateModal.styled.jsx","components/UpdateModal/UpdateModal.jsx","pages/AddPage/AddPage.styled.jsx","pages/AddPage/AddPage.jsx","redux/selectors.js"],"sourcesContent":["import Table from '@mui/material/Table';\nimport { styled } from '@mui/material/styles';\n\nexport const StyledTable = styled(Table)`\n  && {\n    & .MuiTableCell-root.MuiTableCell-head {\n      border: 1px solid rgba(224, 224, 224, 1);\n      background-color: #ecf2ff;\n      font-family: inherit;\n      font-weight: 600;\n      font-size: 30px;\n    }\n\n    & .MuiTableCell-root.MuiTableCell-body {\n      border: 1px solid rgba(224, 224, 224, 1);\n      font-size: 25px;\n      font-family: inherit;\n    }\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const MainTitle = styled.h1`\n  text-align: center;\n  font-size: 35px;\n  margin: 35px 0;\n`;\n","import PropTypes from 'prop-types';\nimport { MainTitle } from './Title.styled';\nexport const Title = ({ text }) => <MainTitle>{text}</MainTitle>;\n\nTitle.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nimport { ErrorMessage, Field, Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 40px;\n`;\n\nexport const StyledLabel = styled.label`\n  margin-bottom: 10px;\n  font-size: 22px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledField = styled(Field)`\n  font-size: 30px;\n  font-weight: 500;\n  font-family: inherit;\n  padding-left: 15px;\n  height: 50px;\n  width: 400px;\n  &::placeholder {\n    font-size: 18px;\n  }\n`;\n\nexport const ErrorInfo = styled(ErrorMessage)`\n  color: red;\n  margin-bottom: 15px;\n  font-size: 18px;\n`;\n\nexport const SubmitButton = styled.button`\n  width: 200px;\n  height: 40px;\n  font-size: 25px;\n  margin-top: 13px;\n  font-family: inherit;\n  cursor: pointer;\n  transition: transform 300ms cubic-bezier(0.755, 0.05, 0.855, 0.06);\n  background-color: #ecf2ff;\n  border: none;\n  &:hover,\n  &:focus {\n    transform: scale(0.9);\n  }\n`;\n","import { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { addProduct } from 'redux/slices/myProductSlice';\n\nimport * as Yup from 'yup';\n\nimport {\n  StyledForm,\n  StyledLabel,\n  StyledField,\n  ErrorInfo,\n  SubmitButton,\n} from './AddForm.styled';\n\nconst currentYear = new Date().getFullYear();\n\nconst AddSchema = Yup.object().shape({\n  title: Yup.string()\n    .min(2, 'Too Short!')\n    .max(20, 'Too Long!')\n    .required('Name is required'),\n  author: Yup.string()\n    .min(2, 'Too Short!')\n    .max(20, 'Too Long!')\n    .required('Author is required'),\n  year: Yup.number()\n    .integer('Year must be an integer')\n    .min(1900, 'Year cannot be earlier than 1900')\n    .max(currentYear, `Year cannot be later than ${currentYear}`)\n    .required('Year is required'),\n  rating: Yup.number()\n    .min(0, 'Rating should be written')\n    .moreThan(0, 'Rating should be more than 0')\n    .lessThan(5.0001, 'Rating can be maximum 5')\n    .required('Rating is required'),\n});\n\nexport const AddForm = () => {\n  const dispatch = useDispatch();\n\n  const onSubmit = (value, resetForm) => {\n    const normalizeRating = +value.rating.toFixed(2);\n    dispatch(\n      addProduct({ ...value, rating: normalizeRating, id: Math.random() })\n    );\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        title: '',\n        author: '',\n        year: '',\n        rating: 0,\n      }}\n      validationSchema={AddSchema}\n      onSubmit={(values, { resetForm }) => {\n        onSubmit(values, resetForm);\n      }}\n    >\n      {({ isSubmitting }) => (\n        <StyledForm>\n          <StyledLabel>\n            Product name\n            <StyledField\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"For example `Iphone`\"\n            />\n          </StyledLabel>\n          <ErrorInfo component=\"div\" name=\"title\" />\n          <StyledLabel>\n            Author name\n            <StyledField\n              type=\"text\"\n              name=\"author\"\n              placeholder=\"For example `Elon Musk`\"\n            />\n          </StyledLabel>\n          <ErrorInfo component=\"div\" name=\"author\" />\n          <StyledLabel>\n            Year of publication\n            <StyledField\n              type=\"text\"\n              name=\"year\"\n              placeholder=\"For example `1992`\"\n            />\n          </StyledLabel>\n          <ErrorInfo component=\"div\" name=\"year\" />\n          <StyledLabel>\n            Rating\n            <StyledField\n              type=\"number\"\n              name=\"rating\"\n              max=\"6\"\n              placeholder=\"For example `1.24`\"\n            />\n          </StyledLabel>\n          <ErrorInfo component=\"div\" name=\"rating\" />\n          <SubmitButton type=\"submit\" disabled={isSubmitting}>\n            Submit\n          </SubmitButton>\n        </StyledForm>\n      )}\n    </Formik>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.3);\n  z-index: 1;\n`;\n\nexport const Modal = styled.div`\n  padding: 40px;\n  background-color: white;\n  border: 1px solid black;\n  position: relative;\n`;\n\nexport const BtnClose = styled.button`\n  cursor: pointer;\n  display: block;\n  padding: 5px 10px;\n  background-color: transparent;\n  position: absolute;\n  top: 0;\n  right: 0;\n  border: none;\n  border-radius: 5px;\n  transition: background-color 300ms cubic-bezier(0.445, 0.05, 0.55, 0.95),\n    transform 300ms cubic-bezier(0.445, 0.05, 0.55, 0.95);\n  & svg {\n    width: 30px;\n    height: 30px;\n  }\n  &:hover,\n  &:focus {\n    background-color: rgba(0, 0, 0, 0.6);\n    transform: scale(0.9);\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 40px;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 10px;\n  font-size: 22px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled.input`\n  font-size: 30px;\n  font-weight: 500;\n  font-family: inherit;\n  padding-left: 15px;\n  height: 50px;\n  width: 400px;\n  &::placeholder {\n    font-size: 18px;\n  }\n`;\n\nexport const BtnSubmit = styled.button`\n  width: 200px;\n  height: 40px;\n  font-size: 25px;\n  margin-top: 13px;\n  font-family: inherit;\n  cursor: pointer;\n  transition: transform 300ms cubic-bezier(0.755, 0.05, 0.855, 0.06);\n  background-color: #ecf2ff;\n  border: none;\n  &:hover,\n  &:focus {\n    transform: scale(0.9);\n  }\n`;\n","import { useState } from 'react';\nimport { GiTireIronCross } from 'react-icons/gi';\nimport { useDispatch } from 'react-redux';\nimport { updateProduct } from 'redux/slices/myProductSlice';\n\nimport {\n  Backdrop,\n  Modal,\n  BtnClose,\n  Form,\n  Label,\n  Input,\n  BtnSubmit,\n} from './UpdateModal.styled';\n\nexport const UpdateModal = ({ product, onClose }) => {\n  const [productToUpdate, setProductToUpdate] = useState(product);\n  const dispatch = useDispatch();\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (\n      productToUpdate.title === product.title &&\n      productToUpdate.author === product.author &&\n      productToUpdate.year === product.year &&\n      productToUpdate.rating === product.rating\n    ) {\n      return;\n    }\n    dispatch(updateProduct(productToUpdate));\n    onClose(false);\n  };\n\n  return (\n    <Backdrop>\n      <Modal>\n        <BtnClose type=\"button\" onClick={() => onClose(false)}>\n          <GiTireIronCross />\n        </BtnClose>\n        <Form onSubmit={onSubmit}>\n          <Label>\n            Product name\n            <Input\n              type=\"text\"\n              value={productToUpdate.title}\n              onChange={e => {\n                let value = e.currentTarget.value;\n                setProductToUpdate(prevState => ({\n                  ...prevState,\n                  title: value,\n                }));\n              }}\n              name=\"title\"\n            />\n          </Label>\n          <Label>\n            Author name\n            <Input\n              type=\"text\"\n              value={productToUpdate.author}\n              onChange={e => {\n                let value = e.currentTarget.value;\n                setProductToUpdate(prevState => ({\n                  ...prevState,\n                  author: value,\n                }));\n              }}\n              name=\"author\"\n            />\n          </Label>\n          <Label>\n            Year of publication\n            <Input\n              type=\"number\"\n              value={productToUpdate.year}\n              onChange={e => {\n                let value = e.currentTarget.value;\n                setProductToUpdate(prevState => ({\n                  ...prevState,\n                  year: value,\n                }));\n              }}\n              name=\"year\"\n            />\n          </Label>\n          <Label>\n            Rating\n            <Input\n              type=\"number\"\n              value={productToUpdate.rating}\n              onChange={e => {\n                let value = e.currentTarget.value;\n                setProductToUpdate(prevState => ({\n                  ...prevState,\n                  rating: value,\n                }));\n              }}\n              name=\"rating\"\n            />\n          </Label>\n          <BtnSubmit type=\"submit\">Submit</BtnSubmit>\n        </Form>\n      </Modal>\n    </Backdrop>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Message = styled.p`\n  font-size: 30px;\n  color: tomato;\n`;\n\nexport const Button = styled.button`\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  & > svg {\n    width: 30px;\n    height: 30px;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectMyProductList } from 'redux/selectors';\nimport { deleteProduct } from 'redux/slices/myProductSlice';\n\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport TableBody from '@mui/material/TableBody';\n\nimport { BiPencil } from 'react-icons/bi';\nimport { MdDeleteOutline } from 'react-icons/md';\n\nimport { AddForm } from 'components/AddForm/AddForm';\nimport { Title } from '../../components/Title/Title';\nimport { UpdateModal } from 'components/UpdateModal/UpdateModal';\n\nimport { StyledTable } from '../../components/ItemList/ItemList.styled';\nimport { Message, Button } from './AddPage.styled';\n\nconst AddPage = () => {\n  const myProductList = useSelector(selectMyProductList);\n  const dispatch = useDispatch();\n  const [isOpen, setIsOpen] = useState(false);\n  const [info, setInfo] = useState(null);\n  const onEdit = product => {\n    setInfo(product);\n    setIsOpen(true);\n  };\n\n  return (\n    <>\n      <Title text={'Add new product'} />\n\n      <AddForm />\n      {!myProductList.length ? (\n        <Message>Your product list is empty</Message>\n      ) : (\n        <StyledTable>\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>Product name</TableCell>\n              <TableCell>Author name</TableCell>\n              <TableCell>Year of publication</TableCell>\n              <TableCell>Rating</TableCell>\n              <TableCell>Update</TableCell>\n              <TableCell>Delete</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {myProductList.map(({ id, title, rating, year, author }, index) => (\n              <TableRow key={id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {index + 1}\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                  {title}\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                  {author}\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                  {year}\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                  {rating}\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                  <Button\n                    type=\"button\"\n                    onClick={() => onEdit({ id, title, rating, year, author })}\n                  >\n                    <BiPencil />\n                  </Button>\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                  <Button\n                    type=\"button\"\n                    onClick={() => dispatch(deleteProduct(id))}\n                  >\n                    <MdDeleteOutline />\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </StyledTable>\n      )}\n      {isOpen && <UpdateModal product={info} onClose={setIsOpen} />}\n    </>\n  );\n};\n\nexport default AddPage;\n","export const selectProducts = state => state.products.items;\nexport const selectIsLoading = state => state.products.isLoading;\nexport const selectFilter = state => state.filter;\nexport const selectMyProductList = state => state.myProductList;\n"],"names":["StyledTable","styled","Table","_templateObject","_taggedTemplateLiteral","MainTitle","Title","_ref","text","_jsx","children","StyledForm","Form","StyledLabel","_templateObject2","StyledField","Field","_templateObject3","ErrorInfo","ErrorMessage","_templateObject4","SubmitButton","_templateObject5","currentYear","Date","getFullYear","AddSchema","Yup","shape","title","min","max","required","author","year","integer","concat","rating","moreThan","lessThan","AddForm","dispatch","useDispatch","Formik","initialValues","validationSchema","onSubmit","values","value","resetForm","normalizeRating","toFixed","addProduct","_objectSpread","id","Math","random","_ref2","isSubmitting","_jsxs","type","name","placeholder","component","disabled","Backdrop","Modal","BtnClose","Label","Input","_templateObject6","BtnSubmit","_templateObject7","UpdateModal","product","onClose","_useState","useState","_useState2","_slicedToArray","productToUpdate","setProductToUpdate","onClick","GiTireIronCross","e","preventDefault","updateProduct","onChange","currentTarget","prevState","Message","Button","myProductList","useSelector","selectMyProductList","isOpen","setIsOpen","_useState3","_useState4","info","setInfo","_Fragment","length","TableHead","TableRow","TableCell","TableBody","map","index","scope","BiPencil","deleteProduct","MdDeleteOutline","selectProducts","state","products","items","selectIsLoading","isLoading","selectFilter","filter"],"sourceRoot":""}