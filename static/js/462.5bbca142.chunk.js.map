{"version":3,"file":"static/js/462.5bbca142.chunk.js","mappings":"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","sources":["components/ItemList/ItemList.styled.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","components/ItemList/ItemList.jsx","components/SearchField/SearchField.styled.jsx","components/SearchField/SearchField.jsx","pages/Home.jsx","redux/selectors.js"],"sourcesContent":["import Table from '@mui/material/Table';\nimport { styled } from '@mui/material/styles';\n\nexport const StyledTable = styled(Table)`\n  && {\n    & .MuiTableCell-root.MuiTableCell-head {\n      border: 1px solid rgba(224, 224, 224, 1);\n      background-color: #ecf2ff;\n      font-family: inherit;\n      font-weight: 600;\n      font-size: 30px;\n    }\n\n    & .MuiTableCell-root.MuiTableCell-body {\n      border: 1px solid rgba(224, 224, 224, 1);\n      font-size: 25px;\n      font-family: inherit;\n    }\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const MainTitle = styled.h1`\n  text-align: center;\n  font-size: 35px;\n  margin: 35px 0;\n`;\n","import PropTypes from 'prop-types';\nimport { MainTitle } from './Title.styled';\nexport const Title = ({ text }) => <MainTitle>{text}</MainTitle>;\n\nTitle.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import { useSelector } from 'react-redux';\nimport { selectFilter, selectProducts } from '../../redux/selectors';\n\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport TableBody from '@mui/material/TableBody';\n\nimport { StyledTable } from './ItemList.styled';\n\nexport const ItemList = () => {\n  const products = useSelector(selectProducts);\n  const filter = useSelector(selectFilter);\n\n  const filterProducts = () =>\n    products.filter(\n      product =>\n        product.title.toLowerCase().includes(filter) ||\n        product.category.toLowerCase().includes(filter)\n    );\n\n  return (\n    <StyledTable>\n      <TableHead>\n        <TableRow>\n          <TableCell>ID</TableCell>\n          <TableCell>Name</TableCell>\n          <TableCell>Description</TableCell>\n          <TableCell>Price</TableCell>\n          <TableCell>Images</TableCell>\n          <TableCell>Rating</TableCell>\n          <TableCell>Stock</TableCell>\n          <TableCell>Category</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {filterProducts().map(\n          ({\n            id,\n            title,\n            description,\n            price,\n            images,\n            rating,\n            stock,\n            category,\n          }) => (\n            <TableRow key={id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {id}\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\">\n                {title}\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\">\n                {description}\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\">\n                {price} $\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\">\n                <img\n                  src={images[0]}\n                  alt={title}\n                  style={{ width: '300px', height: 'auto' }}\n                />\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\">\n                {rating}\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\">\n                {stock}\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\">\n                {category}\n              </TableCell>\n            </TableRow>\n          )\n        )}\n      </TableBody>\n    </StyledTable>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 35px;\n`;\n\nexport const Search = styled.input`\n  font-size: 30px;\n  font-weight: 500;\n  font-family: inherit;\n  padding-left: 15px;\n  height: 50px;\n  width: 400px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/selectors';\nimport { getFilteredProducts } from 'redux/slices/filterSlice';\n\nimport { Wrapper, Search } from './SearchField.styled';\n\nexport const SearchField = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    const value = e.target.value.trim();\n    dispatch(getFilteredProducts(value.toLowerCase()));\n  };\n\n  return (\n    <Wrapper>\n      <Search\n        type=\"text\"\n        name=\"search\"\n        autoComplete=\"off\"\n        placeholder=\"Search\"\n        value={filter}\n        onChange={onChange}\n      />\n    </Wrapper>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getProducts } from '../redux/operation';\n\nimport RingLoader from 'react-spinners/RingLoader';\n\nimport { Title } from '../components/Title/Title';\nimport { ItemList } from '../components/ItemList/ItemList';\nimport { SearchField } from 'components/SearchField/SearchField';\nimport { selectIsLoading } from 'redux/selectors';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(getProducts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Title text={'Product list'} />\n      <SearchField />\n      {isLoading ? <RingLoader /> : <ItemList />};\n    </>\n  );\n};\n\nexport default Home;\n","export const selectProducts = state => state.products.items;\nexport const selectIsLoading = state => state.products.isLoading;\nexport const selectFilter = state => state.filter;\nexport const selectMyProductList = state => state.myProductList;\n"],"names":["StyledTable","styled","Table","_templateObject","_taggedTemplateLiteral","MainTitle","Title","_ref","text","_jsx","children","ItemList","products","useSelector","selectProducts","filter","selectFilter","_jsxs","TableHead","TableRow","TableCell","TableBody","product","title","toLowerCase","includes","category","map","id","description","price","images","rating","stock","component","scope","src","alt","style","width","height","Wrapper","Search","_templateObject2","SearchField","dispatch","useDispatch","type","name","autoComplete","placeholder","value","onChange","e","target","trim","getFilteredProducts","isLoading","selectIsLoading","useEffect","getProducts","_Fragment","RingLoader","state","items","selectMyProductList","myProductList"],"sourceRoot":""}